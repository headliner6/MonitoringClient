//------------------------------------------------------------------------------
// <auto-generated>
//     Der Code wurde von einer Vorlage generiert.
//
//     Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten der Anwendung.
//     Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MonitoringClient
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InventarisierungsloesungEntities : DbContext
    {
        public InventarisierungsloesungEntities()
            : base("name=InventarisierungsloesungEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<abrechnung> abrechnung { get; set; }
        public virtual DbSet<address> address { get; set; }
        public virtual DbSet<contact> contact { get; set; }
        public virtual DbSet<credentials> credentials { get; set; }
        public virtual DbSet<customer> customer { get; set; }
        public virtual DbSet<device> device { get; set; }
        public virtual DbSet<deviceport> deviceport { get; set; }
        public virtual DbSet<devicetype> devicetype { get; set; }
        public virtual DbSet<devicetype_has_operatingsystem> devicetype_has_operatingsystem { get; set; }
        public virtual DbSet<@interface> @interface { get; set; }
        public virtual DbSet<kundenkonto> kundenkonto { get; set; }
        public virtual DbSet<location> location { get; set; }
        public virtual DbSet<log> log { get; set; }
        public virtual DbSet<network> network { get; set; }
        public virtual DbSet<operatingsystem> operatingsystem { get; set; }
        public virtual DbSet<person> person { get; set; }
        public virtual DbSet<pointofdelivery> pointofdelivery { get; set; }
        public virtual DbSet<produkte> produkte { get; set; }
        public virtual DbSet<produktegruppe> produktegruppe { get; set; }
        public virtual DbSet<softwaredienstleistung> softwaredienstleistung { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<town> town { get; set; }
        public virtual DbSet<transportmedium> transportmedium { get; set; }
        public virtual DbSet<v_logentries> v_logentries { get; set; }
    
        public virtual int LogClear(Nullable<int> p_logentries_id)
        {
            var p_logentries_idParameter = p_logentries_id.HasValue ?
                new ObjectParameter("p_logentries_id", p_logentries_id) :
                new ObjectParameter("p_logentries_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LogClear", p_logentries_idParameter);
        }
    
        public virtual int LogMessageAdd(string i_pod, string i_hostname, Nullable<int> i_severity, string i_message)
        {
            var i_podParameter = i_pod != null ?
                new ObjectParameter("i_pod", i_pod) :
                new ObjectParameter("i_pod", typeof(string));
    
            var i_hostnameParameter = i_hostname != null ?
                new ObjectParameter("i_hostname", i_hostname) :
                new ObjectParameter("i_hostname", typeof(string));
    
            var i_severityParameter = i_severity.HasValue ?
                new ObjectParameter("i_severity", i_severity) :
                new ObjectParameter("i_severity", typeof(int));
    
            var i_messageParameter = i_message != null ?
                new ObjectParameter("i_message", i_message) :
                new ObjectParameter("i_message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LogMessageAdd", i_podParameter, i_hostnameParameter, i_severityParameter, i_messageParameter);
        }
    }
}
